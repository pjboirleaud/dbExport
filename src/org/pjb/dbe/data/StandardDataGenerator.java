package org.pjb.dbe.data;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Date;
import java.util.List;

import org.pjb.dbe.Configuration;

public class StandardDataGenerator implements IDataGenerator {
	public void generateData(Connection jdbcConnection, String catalog, String schema, List<String> tables) {
		System.out.println("--");
		System.out.println("-- Data Dump Generated by DbExport / " + getClass().getName());
		System.out.println("-- Date: " + new Date());
		System.out.println("-- URL: " + Configuration.getInstance().getStringValue("url"));
		System.out.println("-- ");
		System.out.println(
				"-- Be carreful to convert to UTF-8 this file before the import (Encoding / convert to UTF-8 from Notepad++)");
		System.out.println("--");
		System.out.println();

		boolean deletes = Configuration.getInstance().getBooleanValue("export.data.deletes", false);

		boolean mysql = Configuration.getInstance().getBooleanValue("export.ddl.to.mysql", false);

		for (String table : tables) {
			if (deletes) {
				if (mysql)
					System.out.println("DELETE FROM `" + table + "`;");
				else {
					System.out.println("DELETE FROM " + table + ";");
				}
			}
			dumpTable(jdbcConnection, catalog, schema, table);
			System.out.println();
		}

		System.out.println();
	}

	private static boolean dumpTable(Connection jdbcConnection, String catalog, String schema, String table) {
		try {
			PreparedStatement stmt = jdbcConnection.prepareStatement("SELECT * FROM " + table);
			ResultSet rs = stmt.executeQuery();
			ResultSetMetaData metaData = rs.getMetaData();
			int columnCount = metaData.getColumnCount();

			boolean mysql = Configuration.getInstance().getBooleanValue("export.ddl.to.mysql", false);

			StringBuilder result = new StringBuilder();
			while (rs.next()) {
				if (mysql)
					result.append("INSERT INTO `" + table + "` VALUES (");
				else {
					result.append("INSERT INTO " + table + " VALUES (");
				}
				for (int i = 0; i < columnCount; i++) {
					if (i > 0) {
						result.append(", ");
					}
					Object value = rs.getObject(i + 1);
					if (value == null) {
						result.append("NULL");
					} else {
						String outputValue = value.toString();
						outputValue = outputValue.replaceAll("'", "''");
						result.append("'" + outputValue + "'");
					}
				}
				result.append(");\n");
			}
			rs.close();
			stmt.close();
			System.out.println(result.toString());
		} catch (SQLException e) {
			System.out.println("Error: could not retrieve data for the table '" + table + "' from the backend.");
			e.printStackTrace();
			return false;
		}
		return true;
	}
}